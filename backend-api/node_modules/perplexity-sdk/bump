#!/bin/bash

# Check if jq is installed
if ! command -v jq &> /dev/null
then
    echo "jq could not be found, please install it."
    exit 1
fi

# Check if package.json exists
if [ ! -f package.json ]; then
    echo "package.json not found."
    exit 1
fi

# Function to increment version
increment_version() {
    echo $1 | awk -F. -v a="$2" 'BEGIN{OFS=FS} {$a+=1; if(a!=NF)for(i=a+1;i<=NF;i++)$i=0}1'
}

# Get current version
current_version=$(jq -r '.version' package.json)

# Prompt for input
echo "Enter the type of release (major, minor, patch):"
read release_type

# Check input
case $release_type in
    major)
    new_version=$(increment_version $current_version 1)
    ;;
    minor)
    new_version=$(increment_version $current_version 2)
    ;;
    patch)
    new_version=$(increment_version $current_version 3)
    ;;
    *)
    echo "Invalid input. Please enter major, minor, or patch."
    exit 1
    ;;
esac

# Update version in package.json
jq --arg new_version "$new_version" '.version=$new_version' package.json > package.json.tmp && mv package.json.tmp package.json

echo "Version updated to $new_version"
