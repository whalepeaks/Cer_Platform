{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skswl\\\\Whalepeaks_Cer_Platform\\\\Cer_Platform\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './global.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [certifications, setCertifications] = useState([]); // 자격증 목록을 저장할 상태\n  const [loading, setLoading] = useState(true); // 로딩 상태\n  const [error, setError] = useState(null); // 에러 상태\n\n  // 백엔드 API 서버의 기본 URL (GCP VM의 외부 IP 주소로 변경)\n  // 주의: 개발 중에는 VM의 외부 IP를 직접 사용하지만,\n  // 프로덕션 배포 시에는 React 앱과 API 서버가 같은 도메인에 있거나,\n  // 환경 변수 등으로 API 주소를 관리하는 것이 좋습니다.\n  const API_BASE_URL = 'http://http://34.64.241.71/:3001';\n\n  // 컴포넌트가 마운트될 때 한 번만 실행되어 자격증 데이터를 가져옴\n  useEffect(() => {\n    const fetchCertifications = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/certifications`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCertifications(data);\n        setError(null);\n      } catch (err) {\n        console.error(\"자격증 데이터 가져오기 실패:\", err);\n        setError(err.message);\n        setCertifications([]); // 오류 발생 시 빈 배열로 초기화\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCertifications();\n  }, []); // 빈 배열을 두 번째 인자로 전달하여 컴포넌트 마운트 시에만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uC790\\uACA9\\uC99D \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"\\uC624\\uB958: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: certifications.length > 0 ? certifications.map(cert => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: cert.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), \": \", cert.description]\n        }, cert.certification_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD45C\\uC2DC\\uD560 \\uC790\\uACA9\\uC99D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YN8xHrOqQ8dEhZWaqNqBloZKDdo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","jsxDEV","_jsxDEV","App","_s","certifications","setCertifications","loading","setLoading","error","setError","API_BASE_URL","fetchCertifications","response","fetch","ok","Error","status","data","json","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","cert","name","description","certification_id","_c","$RefreshReg$"],"sources":["C:/Users/skswl/Whalepeaks_Cer_Platform/Cer_Platform/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './global.css';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nfunction App() {\r\n  const [certifications, setCertifications] = useState([]); // 자격증 목록을 저장할 상태\r\n  const [loading, setLoading] = useState(true); // 로딩 상태\r\n  const [error, setError] = useState(null); // 에러 상태\r\n\r\n  // 백엔드 API 서버의 기본 URL (GCP VM의 외부 IP 주소로 변경)\r\n  // 주의: 개발 중에는 VM의 외부 IP를 직접 사용하지만,\r\n  // 프로덕션 배포 시에는 React 앱과 API 서버가 같은 도메인에 있거나,\r\n  // 환경 변수 등으로 API 주소를 관리하는 것이 좋습니다.\r\n  const API_BASE_URL = 'http://http://34.64.241.71/:3001';\r\n\r\n  // 컴포넌트가 마운트될 때 한 번만 실행되어 자격증 데이터를 가져옴\r\n  useEffect(() => {\r\n    const fetchCertifications = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`${API_BASE_URL}/api/certifications`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setCertifications(data);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error(\"자격증 데이터 가져오기 실패:\", err);\r\n        setError(err.message);\r\n        setCertifications([]); // 오류 발생 시 빈 배열로 초기화\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCertifications();\r\n  }, []); // 빈 배열을 두 번째 인자로 전달하여 컴포넌트 마운트 시에만 실행\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <main className=\"main-content\">\r\n        <h2>자격증 목록</h2>\r\n        {loading && <p>데이터를 불러오는 중입니다...</p>}\r\n        {error && <p style={{ color: 'red' }}>오류: {error}</p>}\r\n        {!loading && !error && (\r\n          <ul>\r\n            {certifications.length > 0 ? (\r\n              certifications.map(cert => (\r\n                <li key={cert.certification_id}>\r\n                  <strong>{cert.name}</strong>: {cert.description}\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p>표시할 자격증이 없습니다.</p>\r\n            )}\r\n          </ul>\r\n        )}\r\n        {/* 다른 콘텐츠나 라우팅된 페이지 컴포넌트가 여기에 올 수 있음 */}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}